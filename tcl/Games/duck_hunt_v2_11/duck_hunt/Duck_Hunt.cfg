 ###############################################################################
#
# Duck Hunt v2.11  ©2015-2016 Menz Agitat
# Paramètres de configuration
#
 ###############################################################################



#####  LANGUE  #################################################################

# Veuillez vous reporter au début du fichier Duck_Hunt.tcl pour ce qui concerne
# la configuration de la langue.



#####  COMPORTEMENT DES CANARDS  ###############################################

# Nombre de canards par jour et par chan.
variable number_of_ducks_per_day 18

# Nombre approximatif de super-canards par jour et par chan.
# Ce nombre est approximatif puique soumis aux lois des probabilités, il y aura
# donc "à peu près" le nombre de super-canards souhaité par jour.
# Les super-canards sont aussi des canards et sont donc comptés dans
# number_of_ducks_per_day; pour cette raison, il ne peut y avoir plus de super-
# canards que de canards.
# Un super-canard est plus difficile à tuer, rapporte plus d'xp et ne peut être
# effrayé.
variable approx_number_of_golden_ducks_per_day 1

# Nombre minimum de points de vie d'un super-canard.
# Chaque point de vie nécessitera un tir.
variable golden_duck_min_HP 3

# Nombre maximum de points de vie d'un super-canard.
# Chaque point de vie nécessitera un tir.
variable golden_duck_max_HP 5

# Et les canards, il ne dorment jamais ?
# Vous pouvez définir une ou plusieurs heures pendant lesquelles il n'y aura pas
# d'envol de canards.
# Ces heures doivent être précédées d'un 0 lorsqu'elles sont inférieures à 10.
# Exemple : variable duck_sleep_hours {02 03 04 05}
variable duck_sleep_hours {}

# Méthode employée pour déterminer quand un canard doit s'envoler :
# 1 = A chaque minute, il y a "number_of_ducks_per_day" chances sur 1440 pour
#			qu'un canard s'envole.
#			Avec cette méthode, les lois des probabilités s'appliquent; il y aura donc
#			"à peu près" le nombre de canards souhaité par jour et les heures d'envol
#			seront imprévisibles.
# 2 = Les heures d'envol sont déterminées à l'avance et réparties de façon
#			relativement homogène tout au long de la journée.
#			Permet d'avoir exactement "number_of_ducks_per_day" canards par jour.
#			Permet à un administrateur de l'Eggdrop de connaître à l'avance les heures
#			d'envol.
variable method 2

# Après combien de tirs le canard s'enfuit-il effrayé ? (-1 = illimité)
variable shots_before_duck_flee 3

# Les tirs réussis doivent-ils aussi effrayer les autres canards en vol ?
# Remarque : si vous réglez ce paramètre à 0, seuls les tirs manqués les
# effraient. (0 = non / 1 = oui)
variable successful_shots_also_scares_ducks 1

# Pendant combien de temps peut-on tirer sur le canard avant qu'il s'échappe ?
# (en secondes)
variable escape_time 300



#####  MUNITIONS  #########################################

# Les chargeurs doivent-ils avoir une capacité illimitée ? (0 = non / 1 = oui)
variable unlimited_ammo_per_clip 0

# Le nombre de chargeurs doit-il être illimité ? (0 = non / 1 = oui)
variable unlimited_ammo_clips 0



#####  ACCIDENTS DE CHASSE et GESTION DES CHASSEURS  ###########################

# Flags qui seront exemptés du risque de prendre une balle perdue.
# Notez que les flags seront testés à la fois globalement et localement.
# Si par exemple vous voulez exclure les flags a et o, mettez "ao".
# Si vous ne voulez exclure personne, mettez ""
variable exempted_flags "b"

# Pourcentage de chances de toucher par accident un autre joueur en cas de tir
# manqué ou de ricochet, s'il y a un canard sur le chan.
# S'il y a entre 1 et 10 personnes sur le chan :
variable chances_to_hit_someone_else_1_10 10
# S'il y a entre 11 et 20 personnes sur le chan :
variable chances_to_hit_someone_else_11_20 12
# S'il y a entre 21 et 30 personnes sur le chan :
variable chances_to_hit_someone_else_21_30 14
# S'il y a plus de 30 personnes sur le chan :
variable chances_to_hit_someone_else_31_ 15

# Pourcentage de chances de toucher par accident un autre joueur en cas de tir
# sauvage ou de ricochet, s'il n'y a pas de canard sur le chan.
# Remarque : on différencie ce cas pour décourager les joueurs de tenter de
# tirer au hasard dans le but d'atteindre d'autres utilisateurs.
# S'il y a entre 1 et 10 personnes sur le chan :
variable chances_wild_fire_hit_someone_1_10 1
# S'il y a entre 11 et 20 personnes sur le chan :
variable chances_wild_fire_hit_someone_11_20 2
# S'il y a entre 21 et 30 personnes sur le chan :
variable chances_wild_fire_hit_someone_21_30 3
# S'il y a plus de 30 personnes sur le chan :
variable chances_wild_fire_hit_someone_31_ 4

# Pourcentage de chances de toucher le canard après un ricochet de la balle.
variable chances_to_ricochet_towards_duck 10

# Nombre de ricochets maximum.
# Une fois ce nombre atteint, la balle a perdu toute son énergie et retombe.
variable max_ricochets 5

# Doit-on kicker les chasseurs qui tirent de façon irresponsable alors qu'il
# n'y a aucun canard en vue ? (0 = non / 1 = oui)
variable kick_on_wild_fire 0

# Un utilisateur qui reçoit une balle perdue et ne parvient pas à l'arrêter ou
# à la défléchir doit-il être kické ?
variable kick_when_shot 1

# Un chasseur dont le fusil explose suite à un sabotage doit-il être kické par
# l'explosion ?
variable kick_when_sabotaged 1

# Si votre serveur utilise des services Anope ou Epona, vous pouvez régler ce
# paramètre afin que les kicks soient effectués par ChanServ.
# (0 = kicks par l'Eggdrop / 1 = kicks par Chanserv)
variable kick_method 0

# Souhaitez-vous que seuls les chasseurs (c'est à dire les utilisateurs
# possédant des statistiques) puissent être victimes d'accidents de chasse ?
# (0 = tous les utilisateurs peuvent avoir un accident de chasse / 1 = seuls
# les chasseurs peuvent avoir un accident de chasse)
variable only_hunters_can_be_shot 1

# Doit-on confisquer son arme aux joueurs qui touchent quelqu'un d'autre par
# accident ? (0 = non / 1 = oui)
variable gun_confiscation_when_shooting_someone 1

# Doit-on confisquer son arme aux joueurs qui ouvrent le feu en l'absence de
# canard ? (0 = non / 1 = oui)
variable gun_confiscation_on_wild_fire 0

# Les armes confisqués doivent-elles être rendues :
#	1 - automatiquement tous les jours à une heure spécifiée
# 2 - automatiquement après le prochain envol de canard(s) (comprenez que les
#			armes confisquées seront rendues APRES que le prochain canard ait été tué
#			ou se soit échappé).
# 3 - manuellement (cf. commande !rearm)
variable gun_hand_back_mode 1

# Heure à laquelle les armes confisquées automatiquement seront rendues aux
# joueurs.
# Ces heures doivent être précédées d'un 0 lorsqu'elles sont inférieures à 10.
# Remarque : ce paramètre sera ignoré si gun_hand_back_mode ne vaut pas 1 ou que
# les paramètres gun_confiscation_when_shooting_someone et
# gun_confiscation_on_wild_fire sont tous deux désactivés.
variable auto_gun_hand_back_time "00:00"

# Heure à laquelle les joueurs seront refournis en munitions.
# Ces heures doivent être précédées d'un 0 lorsqu'elles sont inférieures à 10.
variable auto_refill_ammo_time "00:00"

# Voicer les chasseurs qui réussissent à abattre un canard ? (0 = non / 1 = oui)
variable voice_when_duck_shot 1

# Dévoicer les chasseurs qui tirent en l'absence de canard ? (0 = non / 1 = oui)
variable devoice_on_wild_fire 1

# Dévoicer les chasseurs qui tirent sur quelqu'un par accident ?
# (0 = non / 1 = oui)
variable devoice_on_accident 1

# Dévoicer les chasseurs qui ratent un tir ? (0 = non / 1 = oui)
variable devoice_on_miss 0

# Activer le système anti-highlight ? (0 = non / 1 = oui)
# Quand le système anti-hl est activé, la représentation graphique de l'envol
# des canards sera générée aléatoirement à chaque fois dans le but de déjouer
# les tentatives de mettre un HL sur les canards ou d'automatiser le tir au
# moyen d'un script.
# Si cette option est désactivée, les canards seront tous identiques au modèle
# suivant : -.,¸¸.-·°'`'°·-.,¸¸.-·°'`'°· \_O<   COIN
variable hl_prevention 0

# Activer le système anti-contournement de confiscation d'armes ?
# (0 = non / 1 = oui)
# Quand ce système est activé et que les statistiques de deux utilisateurs sont
# fusionnées automatiquement, si l'utilisateur avec lequel on fusionne n'a plus
# d'arme tandis que l'utilisateur actuel en a une, les statistiques de ce
# dernier ne seront pas prises en compte.
# Dans le cas où la fusion s'opère entre deux utilisateurs qui sont tous deux
# désarmés, les statistiques de celui qui a le moins d'xp ne seront pas prises
# en compte.
variable confiscation_enforcement_on_fusion 0



#####  XP et NIVEAUX  ##########################################################

# Nombre de points d'expérience gagnés pour chaque canard touché.
variable xp_duck 10

# Base de points d'expérience pour les super-canards.
# Le nombre de points d'xp que rapporte un super-canard correspondra à cette
# valeur multipliée par le nombre de ses points de vie.
variable base_xp_golden_duck 12

# Nombre de points d'expérience gagnés en cas de "lucky shot", c'est à dire
# lorsqu'un chasseur parvient à tuer un canard après un ou plusieurs ricochets.
variable xp_lucky_shot 25

# Table de progression des niveaux.
# Les joueurs commencent au niveau 1 avec 0 points d'xp.
# Vous pouvez ajouter autant de niveaux que vous le voulez ou faire les
# modifications que vous voulez, tant que vous respectez les règles suivantes :
#		- Respectez la syntaxe actuellement en place.
#		- Assurez-vous que les bonus ou pénalités de départ combinés aux bonus
#			octroyés par les différents niveaux ne donnent jamais un résultat < 0% ou
#			> à 100%.
#		- Le nombre de points requis pour passer au niveau suivant le niveau le plus
#			élevé doit requérir 9999999999 points d'xp.
#		- Dans les packs le message m134 doit contenir autant de titres qu'il existe
#			de niveaux.
# Syntaxe : level_grantings(niveau) "xp,précision,déflexion,défense,enrayement,taille_chargeur,nombre_chargeurs,xp_tir_raté,xp_tir_sauvage,xp_accident"
#		- niveau : Niveau concerné par les données qui suivent.
#		- xp : Nombre de points d'xp requis pour passer au niveau suivant.
#		- précision : Chances de toucher un canard.
#		- déflexion : Chances pour qu'un tir accidentel ricoche sur le joueur.
#		- défense : Chances pour qu'un tir accidentel soit absorbé par l'armure du
#			joueur et qu'il ne subisse aucun dégât.
#		- enrayement : Chances pour que l'arme s'enraye.
#		- taille_chargeur : Nombre de munitions dans chaque chargeur.
#		- nombre_chargeurs : Nombre de chargeurs mis à disposition du joueur.
#			Se refournit chaque jour à minuit.
#		- xp_tir_raté : Pénalité d'xp pour chaque tir manqué.
#		- xp_tir_sauvage : Pénalité d'xp pour chaque tir effectué l'absence de
#			canard (tirs sauvages).
#		- xp_accident : Pénalité d'xp pour chaque joueur touché par accident.
set ::DuckHunt::level_grantings(0) "-4,55,0,0,15,6,1,-1,-1,-4"
set ::DuckHunt::level_grantings(1) "20,55,0,0,15,6,2,-1,-1,-4"
set ::DuckHunt::level_grantings(2) "50,56,0,2,14,6,2,-1,-1,-4"
set ::DuckHunt::level_grantings(3) "90,57,1,5,13,6,2,-1,-1,-4"
set ::DuckHunt::level_grantings(4) "140,58,2,7,12,6,2,-1,-1,-4"
set ::DuckHunt::level_grantings(5) "200,59,4,10,11,6,2,-1,-1,-4"
set ::DuckHunt::level_grantings(6) "270,60,6,12,10,6,2,-1,-1,-4"
set ::DuckHunt::level_grantings(7) "350,65,8,15,7,4,3,-1,-1,-4"
set ::DuckHunt::level_grantings(8) "440,67,10,17,7,4,3,-1,-1,-4"
set ::DuckHunt::level_grantings(9) "540,69,12,20,7,4,3,-1,-1,-4"
set ::DuckHunt::level_grantings(10) "650,71,14,22,6,4,3,-1,-2,-6"
set ::DuckHunt::level_grantings(11) "770,73,16,25,6,4,3,-1,-2,-6"
set ::DuckHunt::level_grantings(12) "900,73,18,27,6,4,3,-1,-2,-6"
set ::DuckHunt::level_grantings(13) "1040,74,20,30,5,4,3,-1,-2,-6"
set ::DuckHunt::level_grantings(14) "1190,74,22,32,5,4,3,-1,-2,-6"
set ::DuckHunt::level_grantings(15) "1350,75,24,35,5,4,3,-1,-2,-6"
set ::DuckHunt::level_grantings(16) "1520,80,26,37,3,2,4,-1,-2,-6"
set ::DuckHunt::level_grantings(17) "1700,81,28,40,3,2,4,-1,-2,-6"
set ::DuckHunt::level_grantings(18) "1890,81,30,42,3,2,4,-1,-2,-6"
set ::DuckHunt::level_grantings(19) "2090,82,31,45,3,2,4,-1,-2,-6"
set ::DuckHunt::level_grantings(20) "2300,82,32,47,3,2,4,-3,-5,-10"
set ::DuckHunt::level_grantings(21) "2520,83,33,50,2,2,4,-3,-5,-10"
set ::DuckHunt::level_grantings(22) "2750,83,34,52,2,2,4,-3,-5,-10"
set ::DuckHunt::level_grantings(23) "2990,84,35,55,2,2,4,-3,-5,-10"
set ::DuckHunt::level_grantings(24) "3240,84,36,57,2,2,4,-3,-5,-10"
set ::DuckHunt::level_grantings(25) "3500,85,37,60,2,2,4,-3,-5,-10"
set ::DuckHunt::level_grantings(26) "3770,90,38,62,1,1,5,-3,-5,-10"
set ::DuckHunt::level_grantings(27) "4050,91,39,65,1,1,5,-3,-5,-10"
set ::DuckHunt::level_grantings(28) "4340,91,40,67,1,1,5,-3,-5,-10"
set ::DuckHunt::level_grantings(29) "4640,92,41,70,1,1,5,-3,-5,-10"
set ::DuckHunt::level_grantings(30) "4950,92,42,72,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(31) "5270,93,43,75,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(32) "5600,93,44,77,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(33) "5940,94,45,80,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(34) "6290,94,46,82,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(35) "6650,95,47,85,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(36) "7020,95,48,87,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(37) "7400,96,48,90,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(38) "7790,96,49,92,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(39) "8200,97,49,95,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(40) "9999999999,97,50,98,99,1,5,-5,-8,-20"



#####  MAGASIN  ################################################################

# Activer le magasin ? (0 = non / 1 = oui)
variable shop_enabled 1

# Lors de l'utilisation de la commande !shop sans argument, doit-on afficher la
# liste des objets disponibles ou afficher une url permettant de la consulter
# en ligne ? (0 = notice / 1 = url)
# Voir également le paramètre shop_url.
variable shop_preferred_display_mode 0

# Url de la page d'aide du magasin.
variable shop_url "http://url-de-votre-hébergement/shop.html"

# Nombre de points d'xp en dessous duquel les joueurs ne seront pas autorisés
# à acheter des objets dans le magasin.
# Veuillez noter que si le coût d'un achat fait descendre l'xp du joueur en
# dessous de cette valeur, l'achat sera refusé.
variable min_xp_for_shopping 0

# Coût des objets en points d'expérience. Ces valeurs ont été équilibrées en
# fonction des réglages par défaut du script. Si vous modifiez ces derniers,
# vous devrez peut-être réajuster les paramètres qui suivent afin de préserver
# l'équilibre.
# Balle supplémentaire ajoutée directement dans le fusil, usage unique :
variable extra_ammo_cost 7
# Chargeur supplémentaire ajouté à la réserve, usage unique :
variable extra_clip_cost 20
# Munitions AP (antiblindage) pendant 24h, dégâts x2 :
variable AP_ammo_cost 15
# Munitions explosives pendant 24h, dégâts x3 :
variable explosive_ammo_cost 25
# Rachat d'une arme confisquée :
variable hand_back_confiscated_weapon_cost 40
# Graisse à fusil, divise par 2 les risques d'enrayement pendant 24h et protège
# une seule fois contre les effets du jet de sable OU supprime les effets du jet
# de sable :
variable grease_cost 8
# Lunette de visée, améliore la précision du prochain tir de
# (% restant pour arriver à 100)/3 :
variable sight_cost 6
# Détecteur infrarouge, bloque la gâchette de l'arme quand il n'y a pas de
# canard, dure 24h :
variable infrared_detector_cost 15
# Silencieux, n'effraie pas les canards lors des tirs, dure 24h :
variable silencer_cost 5
# Trèfle à 4 feuilles, xp bonus aléatoire (entre 1 et 10, déterminé à l'achat)
# sur tous les canards tués pendant 24h :
variable four_leaf_clover_cost 13
# Lunettes de soleil, protège contre l'éblouissement :
variable sunglasses_cost 5
# Vêtements de rechange, annule l'effet du seau d'eau :
variable spare_clothes_cost 7
# Goupillon, annule les effets jet de sable et sabotage :
variable brush_for_weapon_cost 7
# Miroir, éblouit un chasseur et réduit sa précision de 50% pour son prochain
# tir :
variable mirror_cost 7
# Jet de sable, réduit la fiabilité de l'arme d'un chasseur de 50% pour son
# prochain tir :
variable sand_cost 7
# Seau d'eau, oblige un chasseur à attendre 1h que ses vêtements sèchent avant
# de pouvoir à nouveau chasser :
variable water_bucket_cost 10
# Sabotage, fait s'enrayer et exploser l'arme d'un chasseur à son prochain tir :
variable sabotage_cost 14
# Assurance vie, permet au joueur de gagner 2x le level du tireur en points d'xp
# s'il se fait toucher par accident, dure 1 semaine et disparaît après
# utilisation :
variable life_insurance_cost 10
# Assurance responsabilité civile, divise par 3 la pénalité d'xp en cas
# d'accident de chasse pendant 2 jours :
variable liability_insurance_cost 5
# Appeau, attire un canard dans les 10mn :
variable decoy_cost 8
# Morceaux de pain, augmente les chances qu'un canard s'envole et augmente le
# temps qu'il reste avant de partir, dure 1h, cumulable :
variable piece_of_bread_cost 2
# Détecteur de canards, usage unique, envoie une notice pour prévenir le joueur
# quand un canard s'envole :
variable duck_detector_cost 5
# Canard mécanique lancé 10mn après l'achat, ne rapporte pas d'xp :
variable fake_duck_cost 50

# Nombre maximum de morceaux de pain pouvant être actifs en même temps sur un
# chan.
variable max_bread_on_chan 20

# Empêcher l'utilisation d'appeaux ou de morceaux de pains pendant les heures
# de sommeil des canards (voir paramètre duck_sleep_hours) ? (0 = non / 1 = oui)
variable cant_attract_ducks_when_sleeping 1

# Les appeaux peuvent-ils occasionnellement attirer des super-canards ?
# (0 = non / 1 = oui)
variable decoys_can_attract_golden_ducks 1



#####  DROPS  ##################################################################

# Activer la possibilité de trouver des objets sur les canards abattus ?
# (0 = non / 1 = oui)
variable drops_enabled 1

# Probabilités de dropper des items en nombre de chances sur 1000.
# Remarque : la valeur totale cumulée de ces paramètres correspond aux chances
# sur 1000 de dropper quoi que ce soit (par défaut 145/1000 donc 14,5%).
#
# Item inutile aléatoire (notez que vous pouvez ajouter autant d'items inutiles
# que vous le souhaitez en modifiant le message m394 dans le fichier de langue) :
variable chances_to_drop_junk_item 20
# Une balle :
variable chances_to_drop_ammo 20
# Un chargeur :
variable chances_to_drop_clip 15
# Des munitions AP :
variable chances_to_drop_AP_ammo 7
# Des munitions explosives :
variable chances_to_drop_explosive_ammo 5
# De la graisse
variable chances_to_drop_grease 7
# Une lunette de visée :
variable chances_to_drop_sight 12
# Un détecteur infrarouge :
variable chances_to_drop_infrared_detector 7
# Un silencieux :
variable chances_to_drop_silencer 12
# Un trèfle à 4 feuilles :
variable chances_to_drop_four_leaf_clover 7
# Des lunettes de soleil :
variable chances_to_drop_sunglasses 12
# Un détecteur de canards :
variable chances_to_drop_ducks_detector 12
# Un livre de compétences +10xp :
variable chances_to_drop_10_xp 3
# Un livre de compétences +20xp :
variable chances_to_drop_20_xp 2
# Un livre de compétences +30xp :
variable chances_to_drop_30_xp 1
# Un livre de compétences +40xp :
variable chances_to_drop_40_xp 1
# Un livre de compétences +50xp :
variable chances_to_drop_50_xp 1
# Un livre de compétences +100xp :
variable chances_to_drop_100_xp 1



#####  AFFICHAGE  ##############################################################

# Mode d'affichage préféré pour les messages du script.
# (1 = messages publics sur le chan / 2 = notices au joueur)
# Notez que certains messages seront toujours affichés en notice comme les
# statistiques, et que certains autres seront toujours affichés en public comme
# les envols de canards et les tirs qui atteignent une cible.
variable preferred_display_mode 1

# Filtrer les codes de style (couleurs, gras, ...) dans tous les affichages du
# script ? (0 = non / 1 = oui)
variable monochrome 0
 
# Longueur maximum d'une ligne affichable. Si la fin de certaines lignes est
# tronquée, cela signifie que vous devez diminuer cette valeur.
variable max_line_length 435

# Afficher un avertissement en partyline et dans les logs de l'Eggdrop lorsqu'un
# utilisateur se renomme en un nick qui possède déjà des statistiques ?
# Remarque : à ce stade, les statistiques ne sont pas transférées / fusionnées
# tant que l'utilisateur n'interagit pas avec le script.
# (0 = non / 1 = oui)
variable warn_on_rename 0

# Afficher un avertissement en partyline et dans les logs de l'Eggdrop lors
# d'une appropriation ou d'une fusion de statistiques ? (0 = non / 1 = oui)
variable warn_on_takeover 1

# Afficher un message en partyline pour informer d'une replanification des
# heures d'envol lorsqu'un morceau de pain est ajouté ou expire ?
# (0 = non / 1 = oui)
variable show_bread_replanning 1



#####  LOGS  ###################################################################

# Activer les logs de chasse ?
variable hunting_logs 0

# Emplacement des logs.
# Les fichiers créés seront de la forme yyyymmdd_chan.log
# Vous devez vérifier que le répertoire que vous définissez ici existe, et le
# créer manuellement si nécessaire.
variable log_directory "scripts/duck_hunt/logs/"



#####  PARAMETRES DIVERS  ########################################################

# Combien de temps laisse-t-on à l'Eggdrop pour rejoindre tous les chans
# lorsqu'il se connecte avant de planifier les envols ? (en secondes)
# Remarque : ce paramètre n'est pris en compte que si method = 2.
variable post_init_delay 60

# Emplacement et nom du fichier contenant la base de données principale.
# Vous devez vérifier que le répertoire que vous définissez ici existe, et le
# créer manuellement si nécessaire.
variable db_file "scripts/duck_hunt/database/player_data.db"

# Heure de la création automatique d'une copie de sauvegarde de la base de
# données.
# Ces heures doivent être précédées d'un 0 lorsqu'elles sont inférieures à 10.
variable backup_time "00:03"

# Emplacement et nom du fichier qui sera généré lors de l'exportation de la
# table des statistiques des joueurs.
# Vous devez vérifier que le répertoire que vous définissez ici existe, et le
# créer manuellement si nécessaire.
variable players_table_file "scripts/duck_hunt/players_table.txt"

# Emplacement et nom du fichier contenant la base de données de suivi des
# changements de nicks.
# Vous devez vérifier que le répertoire que vous définissez ici existe, et le
# créer manuellement si nécessaire.
variable pending_transfers_file "scripts/duck_hunt/database/pending_transfers.db"

# Âge maximum en secondes de la base de données de suivi des changements de
# nicks.
# Si la date de la dernière mise à jour de cette base de données est plus
# ancienne que cette valeur, elle ne sera pas rechargée automatiquement au
# chargement du script car les informations qu'elle contient ne seront
# vraisemblablement plus d'actualité.
variable pending_transfers_file_max_age 3600

# Préfixe utilisé par votre serveur IRC pour renommer les utilisateurs qui ne
# s'identifient pas dans les temps.
# Le préfixe est sensible à la casse.
# Ce préfixe sera utilisé par le système de suivi des changements de nick pour
# empêcher le transfert automatique des statistiques vers ce genre de nicks.
# Si par exemple les nicks ressemblent à "Anonyme54720", mettez "Anonyme".
variable anonym_prefix ""



#####  COMMANDES ET AUTORISATIONS  #############################################

# Commande et autorisations requises pour tirer sur un canard.
variable shooting_cmd "!bang"
variable shooting_auth "-|-"

# Commande et autorisations requises pour recharger son arme ou la décoincer si
# elle est enrayée.
variable reload_cmd "!reload"
variable reload_auth "-|-"

# Commande et autorisations requises pour afficher l'heure d'envol du dernier
# canard.
# Commande publique :
variable lastduck_pub_cmd "!lastduck"
variable lastduck_pub_auth "-|-"
# Commande par message privé :
variable lastduck_msg_cmd "lastduck"
variable lastduck_msg_auth "mno|mnol"

# Commande et autorisations requises pour afficher ses données de chasse
# personnelles ou celles d'un autre joueur.
variable stat_cmd "!duckstats"
variable stat_auth "-|-"

# Commande et autorisations requises pour effectuer des achats dans le magasin.
variable shop_cmd "!shop"
variable shop_auth "-|-"

# Commande et autorisations requises pour désarmer un joueur.
variable unarm_cmd "!unarm"
variable unarm_auth "mno|mnol"

# Commande et autorisations requises pour réarmer un joueur.
variable rearm_cmd "!rearm"
variable rearm_auth "mno|mnol"

# Commande et autorisations requises pour afficher la liste des chasseurs ou
# effectuer une recherche dans celle-ci (commande par message privé uniquement).
variable findplayer_cmd "ducklist"
variable findplayer_auth "mno|mnol"

# Commande et autorisations requises pour fusionner les statistiques de deux
# joueurs (commande par message privé uniquement).
variable fusion_cmd "duckfusion"
variable fusion_auth "mno|mnol"

# Commande et autorisations requises pour renommer le profil de statistiques
# d'un joueur (commande par message privé uniquement).
variable rename_cmd "duckrename"
variable rename_auth "mno|mnol"

# Commande et autorisations requises pour supprimer le profil de statistiques
# d'un joueur (commande par message privé uniquement).
variable delete_cmd "duckdelete"
variable delete_auth "mno|mnol"

# Commande et autorisations requises pour afficher la planification des envols
# de canards pour la journée en cours (si method = 2, commande par message privé
# uniquement).
variable planning_cmd "duckplanning"
variable planning_auth "mno|mnol"

# Commande et autorisations requises pour recalculer une planification
# différente des envols de canards pour la journée en cours (si method = 2,
# commande par message privé uniquement).
variable replanning_cmd "duckreplanning"
variable replanning_auth "mno|mnol"

# Commande et autorisations requises pour faire s'envoler un canard
# manuellement (commande par message privé uniquement).
variable launch_cmd "ducklaunch"
variable launch_auth "mno|mnol"

# Commande et autorisations requises pour exporter les données des joueurs sous
# forme de tableau dans un fichier texte.
variable export_cmd "duckexport"
variable export_auth "mno|mnol"

# Liste de handles qui ne seront pas autorisés à jouer, séparés par un espace.
# Veillez à respecter la casse.
variable blacklisted_handles {}



#####  ANTIFLOOD  ##############################################################

# Activer l'antiflood ? (0 = désactivé / 1 = activé)
variable antiflood 1

# Contrôle de flood individuel.
# Lorsqu'il s'active, la commande sera bloquée pour l'utilisateur qui l'a
# déclenché uniquement.
# Exemple : "10:600" = 10 requêtes maximum en 600 secondes, les suivantes seront
# ignorées.
# Seuil pour la commande !bang :
variable flood_shoot "30:600"
# Seuil pour la commande !reload :
variable flood_reload "15:120"
# Seuil pour la commande !duckstats :
variable flood_stats "2:120"
# Seuil pour la commande !lastduck :
variable flood_lastduck "1:300"
# Seuil pour la commande !shop :
variable flood_shop "3:600"

# Contrôle de flood global, toutes commandes confondues.
# Lorsqu'il s'active, les commandes du script sont bloquées pour tout le monde
# sur le chan concerné.
# Remarque : pour le nombre de requêtes, spécifiez une valeur supérieure à la
#	plus grande valeur définie pour le contrôle de flood individuel.
variable flood_global "30:600"

# Intervalle de temps minimum entre l'affichage de 2 messages avertissant que
# l'antiflood a été déclenché (ne réglez pas cette valeur trop bas afin de ne
# pas être floodé par les messages d'avertissement de l'antiflood...)
variable antiflood_msg_interval 60
